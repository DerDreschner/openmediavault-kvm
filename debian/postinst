#!/bin/sh

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

case "$1" in
    configure)
        # Activate package triggers.
        dpkg-trigger update-workbench

        # add and load macvlan module
        echo "macvlan" > /etc/modules-load.d/macvlan.conf
        modprobe macvlan || :

        # allow qemu connections to network
        qemuConf="/etc/libvirt/qemu.conf"
        sed -i 's/#vnc_listen = .*/vnc_listen = "0.0.0.0"/' ${qemuConf}

        # enable nvram for uefi
        line=$(grep -n 'nvram = \[' ${qemuConf} | cut -d":" -f1)
        line2=$((line+6))
        sed -i "${line},${line2} s/#//" ${qemuConf}

        # disable ksm if not supported
        if [ ! -f "/sys/kernel/mm/ksm/run" ]; then
            systemctl stop ksm.service
            systemctl disable ksm.service
        fi

        # restart service
        systemctl restart libvirtd.service

        if ! omv_user_id_exists openmediavault-kvmweb; then
            useradd --system --user-group --no-create-home \
                --shell '/usr/sbin/nologin' \
                openmediavault-kvmweb
        fi

        if ! omv_config_exists "/config/services/kvm"; then
            omv_config_add_node "/config/services" "kvm"
            omv_config_add_node "/config/services/kvm" "jobs"
        fi

        count=$(omv_config_get_count "/config/services/kvm/jobs/job");
        index=1;
        while [ ${index} -le ${count} ]; do
            job="/config/services/kvm/jobs/job[position()=${index}]"
            if ! omv_config_exists "${job}/keep"; then
                omv_config_add_key "${job}" "keep" "0"
            fi
            index=$(( ${index} + 1 ))
        done;

        omv-salt deploy run --no-color kvm || :
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument" >&2
        exit 1
    ;;
esac

exit 0
