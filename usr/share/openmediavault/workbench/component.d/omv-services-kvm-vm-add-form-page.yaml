version: "1.0"
type: component
data:
  name: omv-services-kvm-vm-add-form-page
  type: formPage
  config:
    request:
      service: Kvm
      post:
        method: setVm
    fields:
      - type: checkbox
        name: advanced
        label: _("Show advanced options")
        submitValue: false
      - type: divider
        title: _("Settings")
      - type: textinput
        name: vmname
        label: _("VM name")
        validators:
          required: true
          patternType: 'shareName'
      - type: select
        name: arch
        label: _("Architecture")
        value: "x86_64"
        store:
          data:
            - ["aarch64", _("aarch64")]
            - ["arm", _("arm")]
            - ["i386", _("i386")]
            - ["x86_64", _("x86_64")]
        modifiers:
          - type: visible
            constraint:
              operator: truthy
              arg0:
                prop: advanced
      - type: select
        name: chipset
        label: _("Chipset")
        value: "q35"
        store:
          data:
            - ["pc", _("i440FX")]
            - ["q35", _("Q35")]
        modifiers:
          - type: visible
            constraint:
              operator: and
              arg0:
                operator: or
                arg0:
                  operator: eq
                  arg0:
                    prop: arch
                  arg1: "x86_64"
                arg1:
                  operator: eq
                  arg0:
                    prop: arch
                  arg1: "i386"
              arg1:
                operator: truthy
                arg0:
                  prop: advanced
      - type: select
        name: os
        label: _("OS")
        value: "linux"
        store:
          data:
            - ["linux", _("Linux")]
            - ["windows", _("Windows")]
      - type: checkbox
        name: uefi
        label: _("UEFI")
        modifiers:
          - type: checked
            constraint:
              operator: or
              arg0:
                operator: eq
                arg0:
                  prop: arch
                arg1: "aarch64"
              arg1:
                operator: eq
                arg0:
                  prop: arch
                arg1: "arm"
      - type: numberInput
        name: vcpu
        label: _("CPUs")
        value: 1
        validators:
          min: 1
          max: 32
          patteryType: port
          required: true
      - type: container
        fields:
          - type: numberInput
            name: memory
            label: _("Memory")
            value: 1
            validators:
              min: 1
              max: 99999
              patteryType: port
              required: true
          - type: select
            name: memoryunit
            value: "GiB"
            store:
              data:
                - ["MiB", _("MiB")]
                - ["GiB", _("GiB")]
      - type: checkbox
        name: audio
        label: _("Audio")
        modifiers:
          - type: visible
            constraint:
              operator: truthy
              arg0:
                prop: advanced
      - type: container
        modifiers:
          - type: visible
            constraint:
              operator: truthy
              arg0:
                prop: advanced
        fields:
          - type: checkbox
            name: vnc
            label: _("VNC")
            value: true
            modifiers:
              - type: visible
                constraint:
                  operator: truthy
                  arg0:
                    prop: advanced
          - type: checkbox
            name: spice
            label: _("Spice")
            value: true
            modifiers:
              - type: visible
                constraint:
                  operator: truthy
                  arg0:
                    prop: advanced
      - type: divider
        title: _("Storage Volume")
      - type: select
        name: voldisk
        label: _('Volume')
        textField: path
        valueField: path
        value: 'Create new disk'
        store:
          proxy:
            service: 'Kvm'
            get:
              method: 'enumerateVolumes'
              params:
                optical: false
                opticalNone: false
      - type: select
        name: volpool
        label: _('Pool')
        textField: name
        valueField: name
        store:
          proxy:
            service: 'Kvm'
            get:
              method: 'enumeratePools'
        modifiers:
          - type: visible
            constraint:
              arg0:
                prop: voldisk
              arg1: "Create new disk"
      - type: textInput
        name: volname
        label: _("Name")
        hint: _("Leave blank to use VM name.")
        modifiers:
          - type: visible
            constraint:
              operator: and
              arg0:
                prop: voldisk
              arg1: "Create new disk"
      - type: container
        modifiers:
          - type: visible
            constraint:
              arg0:
                prop: voldisk
              arg1: "Create new disk"
        fields:
          - type: numberInput
            name: volsize
            label: _("Size")
            validators:
              min: 1
              max: 99999
              patteryType: port
              required: true
            modifiers:
              - type: visible
                constraint:
                  arg0:
                    prop: voldisk
                  arg1: "Create new disk"
          - type: select
            name: volunit
            label: _("Unit")
            value: "G"
            store:
              data:
                - ["M", _("Megabytes")]
                - ["G", _("Gigabytes")]
                - ["T", _("Terabytes")]
            modifiers:
              - type: visible
                constraint:
                  arg0:
                    prop: voldisk
                  arg1: "Create new disk"
      - type: select
        name: volformat
        label: _("Format")
        value: "qcow2"
        store:
          data:
            - ["qcow2", _("qcow2")]
            - ["raw", _("raw")]
        modifiers:
          - type: visible
            constraint:
              arg0:
                prop: voldisk
              arg1: "Create new disk"
      - type: select
        name: volbus
        label: _("Bus")
        value: "virtio"
        store:
          data:
            - ["virtio", _("virtio")]
            - ["scsi", _("scsi")]
            - ["sata", _("sata")]
            - ["ide", _("ide")]
        modifiers:
          - type: visible
            constraint:
              arg0:
                prop: voldisk
              arg1: "Create new disk"
      - type: divider
        title: _("Optical Drive")
      - type: select
        name: voliso
        label: _('Optical disk')
        textField: path
        valueField: path
        store:
          proxy:
            service: 'Kvm'
            get:
              method: 'enumerateVolumes'
              params:
                optical: true
                opticalNone: true
      - type: divider
        title: _("Network")
      - type: select
        name: model
        label: _("Model")
        value: "virtio"
        store:
          data:
            - ["virtio", _("virtio")]
            - ["e1000", _("e1000")]
            - ["vmxnet3", _("vmxnet3")]
            - ["rtl8139", _("rtl8139")]
            - ["ne2k_pci", _("ne2k_pci")]
            - ["pcnet", _("pcnet")]
            - ["bridge", _("bridge")]
      - type: select
        name: bridge
        label: _('Bridge')
        textField: bridge
        valueField: bridge
        store:
          proxy:
            service: 'Kvm'
            get:
              method: 'enumerateBridges'
        modifiers:
          - type: visible
            constraint:
              operator: eq
              arg0:
                prop: model
              arg1: "bridge"
      - type: select
        name: network
        label: _('Network')
        textField: netname
        valueField: netname
        store:
          proxy:
            service: 'Kvm'
            get:
              method: 'enumerateNetworks'
        modifiers:
          - type: visible
            constraint:
              operator: ne
              arg0:
                prop: model
              arg1: "bridge"
      - type: textInput
        name: macaddress
        label: _("MAC address")
        hint: _("Leave blank for random address.")
        modifiers:
          - type: visible
            constraint:
              operator: truthy
              arg0:
                prop: advanced
      - type: divider
        title: _("Notes")
      - type: textarea
        name: notes
        label: _("Notes")
        value: ""
        rows: 3
    buttons:
      - template: submit
        execute:
          type: url
          url: "/services/kvm/vm"
      - template: cancel
        execute:
          type: url
          url: "/services/kvm/vm"
